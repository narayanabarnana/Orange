<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite name="testCases.Checkboxes" tests="2" time="0.000" ignored="9" failures="0" timestamp="10 Apr 2018 15:01:25 GMT" skipped="1" hostname="DIN86000837" errors="1">
  <testcase name="Checkbox" time="0.000" classname="testCases.Checkboxes">
    <skipped/>
  </testcase> <!-- Checkbox -->
  <testcase name="PHPTravelsLogin" time="0.000" classname="testCases.Checkboxes">
    <error type="org.openqa.selenium.json.JsonException" message="Unable to convert: Error 404: Not Found
Not Found
Build info: version: &#039;3.11.0&#039;, revision: &#039;e59cfb3&#039;, time: &#039;2018-03-11T20:33:15.31Z&#039;
System info: host: &#039;DIN86000837&#039;, ip: &#039;10.108.199.208&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_131&#039;
Driver info: driver.version: RemoteWebDriver">
      <![CDATA[org.openqa.selenium.json.JsonException: Unable to convert: Error 404: Not Found
Not Found
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:15.31Z'
System info: host: 'DIN86000837', ip: '10.108.199.208', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_131'
Driver info: driver.version: RemoteWebDriver
	at com.google.gson.JsonParser.parse(JsonParser.java:65)
	at com.google.gson.JsonParser.parse(JsonParser.java:45)
	at org.openqa.selenium.json.JsonToBeanConverter.convert(JsonToBeanConverter.java:201)
	at org.openqa.selenium.json.JsonToBeanConverter.convert(JsonToBeanConverter.java:55)
	at org.openqa.selenium.json.Json.toType(Json.java:80)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:87)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:273)
	at utilities.BaseClass.PHPTravelsLogin(BaseClass.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:144)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:169)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.google.gson.JsonSyntaxException: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 8 path $
	... 25 more
Caused by: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 8 path $
	at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1568)
	at com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1409)
	at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:542)
	at com.google.gson.stream.JsonReader.peek(JsonReader.java:425)
	at com.google.gson.JsonParser.parse(JsonParser.java:60)
	... 24 more
]]>
    </error>
  </testcase> <!-- PHPTravelsLogin -->
  <testcase name="Challenging_DOM" classname="testCases.ChallengingDOM">
    <skipped/>
  </testcase> <!-- Challenging_DOM -->
  <testcase name="setUp" classname="utilities.BaseClass">
    <skipped/>
  </testcase> <!-- setUp -->
  <testcase name="setUp" classname="utilities.BaseClass">
    <skipped/>
  </testcase> <!-- setUp -->
  <testcase name="setUp" classname="utilities.BaseClass">
    <skipped/>
  </testcase> <!-- setUp -->
  <testcase name="setUp" classname="utilities.BaseClass">
    <skipped/>
  </testcase> <!-- setUp -->
  <testcase name="teardown" classname="utilities.BaseClass">
    <skipped/>
  </testcase> <!-- teardown -->
  <testcase name="teardown" classname="utilities.BaseClass">
    <skipped/>
  </testcase> <!-- teardown -->
  <testcase name="teardown" classname="utilities.BaseClass">
    <skipped/>
  </testcase> <!-- teardown -->
  <testcase name="teardown" classname="utilities.BaseClass">
    <skipped/>
  </testcase> <!-- teardown -->
</testsuite> <!-- testCases.Checkboxes -->
